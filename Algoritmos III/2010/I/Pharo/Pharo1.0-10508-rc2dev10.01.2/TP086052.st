Object subclass: #Constante	instanceVariableNames: 'valor'	classVariableNames: ''	poolDictionaries: ''	category: 'TP086052'!!Constante methodsFor: 'as yet unclassified' stamp: 'MarianoRibotta 3/18/2010 11:27'!getValor	"Devuelve el valor de la constante" ^valor.! !!Constante methodsFor: 'as yet unclassified' stamp: 'MarianoRibotta 3/18/2010 11:17'!valor:x	"Ingresa el valor de la constante"	| temporary variable names |		valor := x.! !Object subclass: #Logaritmo	instanceVariableNames: 'parametro1 parametro2'	classVariableNames: ''	poolDictionaries: ''	category: 'TP086052'!!Logaritmo methodsFor: 'as yet unclassified' stamp: 'MarianoRibotta 3/18/2010 12:00'!evaluarEn: x	"Evalúa el logaritmo"		| base argumento |	parametro2 valor:x.	argumento := parametro2 getValor.	base := parametro1.	^( argumento log:base ).! !!Logaritmo methodsFor: 'as yet unclassified' stamp: 'MarianoRibotta 3/18/2010 11:48'!parametro1: a parametro2: b	"Guarda en el objeto logaritmo, los valores pasados"	parametro1 := a getValor.	parametro2 := b.! !Object subclass: #Resta	instanceVariableNames: 'parametro1 parametro2'	classVariableNames: ''	poolDictionaries: ''	category: 'TP086052'!!Resta methodsFor: 'as yet unclassified' stamp: 'MarianoRibotta 3/18/2010 11:44'!evaluarEn: x	"Evalúa la resta en el valor pasado"	parametro2 valor:x.	^(parametro1 - parametro2 getValor).! !!Resta methodsFor: 'as yet unclassified' stamp: 'MarianoRibotta 3/18/2010 11:48'!parametro1: a parametro2: b	"Guarda en el objeto resta, los valores pasados"	parametro1 := a getValor.	parametro2 := b.! !Object subclass: #X	instanceVariableNames: 'valor'	classVariableNames: ''	poolDictionaries: ''	category: 'TP086052'!!X methodsFor: 'as yet unclassified' stamp: 'MarianoRibotta 3/18/2010 11:45'!getValor	"Devuelve el valor de x"	^valor.! !!X methodsFor: 'as yet unclassified' stamp: 'MarianoRibotta 3/18/2010 11:45'!valor: x	"Inicializa el valor de x"	valor := x.! !
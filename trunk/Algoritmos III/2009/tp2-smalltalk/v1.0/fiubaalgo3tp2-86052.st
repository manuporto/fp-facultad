Object subclass: #Casillero	instanceVariableNames: 'estado'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!Casillero methodsFor: 'as yet unclassified' stamp: 'MR 10/28/2009 12:28'!dateVuelta	"El casillero se descubre. Si ya estaba descubierto, tira una excepcion"	( estado == 'descubierto' ) ifTrue: [CasilleroYaDescubiertoError new signal ].	estado := 'descubierto'.! !!Casillero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:00'!getEstado	"Devuelve el estado -descubierto u oculto"	^estado.! !!Casillero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:02'!initialize	"Constructor del casillero"	estado := 'oculto'.! !Casillero subclass: #CasilleroBomba	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroBomba methodsFor: 'as yet unclassified' stamp: 'MR 10/28/2009 12:16'!initialize	"Constructor de la clase CasilleroBomba"	super initialize.! !Casillero subclass: #CasilleroCaliente	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroCaliente methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 03:32'!initialize	"Constructor de la clase CasilleroCaliente"	super initialize.! !Casillero subclass: #CasilleroEstrella	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroEstrella methodsFor: 'as yet unclassified' stamp: 'MR 10/28/2009 12:23'!initialize	"Constructor de la clase CasilleroEstrella"	super initialize.! !Casillero subclass: #CasilleroExpansible	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroExpansible methodsFor: 'as yet unclassified' stamp: 'MR 10/28/2009 12:24'!initialize	"Constructor de la clase CasilleroExpansible"	super initialize.! !Casillero subclass: #CasilleroFrio	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroFrio methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 03:31'!initialize	"Constructor de la clase CasilleroCaliente"	super initialize.! !Error subclass: #CasilleroYaDescubiertoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!Object subclass: #Juego	instanceVariableNames: 'tablero'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!Juego methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 03:42'!initialize:tamanio.	"Inicia el juego. Crea el tablero"	tablero := Tablero new.	[ tablero initialize: tamanio. ] on: TamanioDemasiadoChicoError	do: [ Transcript show: 'El tamaño debe ser superior a 3'. ].! !!Juego methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 02:46'!jugar:posicion	"Envia al tablero la orden de mover la ficha"	[ ^tablero darVuelta:posicion ] on: PosicionFueraDelTableroError	 do: [^'La posicion ingresada esta fuera del rango posible']! !Error subclass: #PosicionFueraDelTableroError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!Object subclass: #Tablero	instanceVariableNames: 'cantBombas cantEstrellas tablero tamanio estadoDeLasCasillas'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:03'!agregarBombas	"Agrega las tres bombas al tablero"	| cantidadDeBombas posX posY bomba |	cantidadDeBombas := 0.	[cantidadDeBombas < 3 ] whileTrue: [		posX := (1 to: tamanio) atRandom.		posY := (1 to: tamanio) atRandom.		( ( estadoDeLasCasillas at:posX@posY ) = 'LIBRE' ) ifTrue: [			bomba := CasilleroBomba new.			bomba initialize.			self poner: bomba en: posX@posY.			cantidadDeBombas := cantidadDeBombas + 1.			estadoDeLasCasillas at:posX@posY put: 'OCUPADA'.		].	 ].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:03'!agregarEstrellas	"Agrega las tres estrellas"	| cantidadDeEstrellas posX posY estrella |	cantidadDeEstrellas := 0.	[cantidadDeEstrellas < 3 ] whileTrue: [		posX := (1 to: tamanio) atRandom.		posY := (1 to: tamanio) atRandom.		( ( estadoDeLasCasillas at:posX@posY ) = 'LIBRE' ) ifTrue: [			estrella := CasilleroEstrella new.			estrella initialize.			self poner: estrella en: posX@posY.			cantidadDeEstrellas := cantidadDeEstrellas + 1.			estadoDeLasCasillas at:posX@posY put: 'OCUPADA'.		].	 ].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 02:27'!calcularDistanciaA: tipo en:posicion	"Calcula la distancia desde la posicion actual hasta la primera bomba o estrella"	| iteracion xDesde xHasta yDesde yHasta maximo |	iteracion := 1.		maximo := self hallarMaximo:posicion.		[ iteracion <= tamanio "maximo" ] whileTrue: [				xDesde := (posicion x) - iteracion.		xHasta := (posicion x) + iteracion. 		yDesde := (posicion y) - iteracion.		yHasta := (posicion y) + iteracion.		( xDesde < 1 ) ifTrue: [ xDesde:= 1. ].		( xHasta > tamanio ) ifTrue: [ xHasta := tamanio. ].		( yDesde < 1 ) ifTrue: [ yDesde := 1. ].		( yHasta > tamanio ) ifTrue: [ yHasta := tamanio. ].		xDesde to: xHasta do: [:indexX | 			yDesde to: yHasta do: [:indexY |				( ( ( tablero at:indexX@indexY ) class ) = tipo )				ifTrue: [ 					^iteracion				].			].		].		iteracion := iteracion +1.	]! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 00:28'!completarTablero	"Una vez ingresadas las tres bombas y tres estrellas, completo el tablero"	| tipoCasillero casillero |	1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			( ( estadoDeLasCasillas at:fila@columna ) = 'LIBRE' ) ifTrue: [				tipoCasillero := (1 to: 3) atRandom.				(tipoCasillero = 1) ifTrue: [					casillero := CasilleroFrio new.					casillero initialize.					].				(tipoCasillero = 2) ifTrue: [					casillero := CasilleroCaliente new.					casillero initialize.					].				(tipoCasillero = 3) ifTrue: [					casillero := CasilleroExpansible new.					casillero initialize.					].				self poner: casillero en:fila@columna.				estadoDeLasCasillas at:fila@columna put: 'OCUPADA'.							].		].	].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:23'!crearTablero	"Completa el tablero con distintos tipos de casillero"	self agregarBombas.	self agregarEstrellas.	self completarTablero.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 03:09'!darVuelta:posicion	"Da vuelta el casillero en la posicion pedida"		| casillero xDesde xHasta yDesde yHasta distancia  |		( cantBombas = 3 ) ifFalse: [ (cantEstrellas = 3) ifFalse: [		((posicion x > tamanio) | (posicion y > tamanio)) ifTrue: [ PosicionFueraDelTableroError new signal.].	casillero := tablero at: posicion.		[ (tablero at: posicion) dateVuelta. ]		on: CasilleroYaDescubiertoError		do: ["			^ 'El casillero ya estaba dado vuelta'."			Transcript show: 'Posicion '.			Transcript show: posicion.			Transcript show: ': '.			Transcript show: 'El casillero ya estaba dado vuelta'.			Transcript cr.			^'yaDadoVuelta'			].				( ( casillero class ) = CasilleroExpansible ) ifTrue: [			xDesde := (posicion x) - 1.			xHasta := (posicion x) +1. 			yDesde := (posicion y) -1.			yHasta := (posicion y) +1.			Transcript show: 'Posicion '.			Transcript show: posicion.			Transcript show: ': '.			Transcript show: 'Se dio vuelta un casillero expansible'.			Transcript cr.			( ( posicion x ) = 1 ) ifTrue: [ xDesde:= 1. ].			( ( posicion x ) = tamanio ) ifTrue: [ xHasta := tamanio. ].			( ( posicion y ) = 1 ) ifTrue: [ yDesde := 1. ].			( ( posicion y ) = tamanio ) ifTrue: [ yHasta := tamanio. ].					xDesde to: xHasta do: [:indexX | 				yDesde to: yHasta do: [:indexY |					self darVuelta:indexX@indexY.				].			]."			^'Se dio vuelta un casillero expansible'."			^'CasilleroExpansible'		].		( ( casillero class ) = CasilleroFrio ) ifTrue: [			distancia := (self calcularDistanciaA: CasilleroBomba en:posicion)."			^ 'Se dio vuelta un casillero frio. La bomba mas cercana esta a una distancia PROXIMAMENTE'."			Transcript show: 'Posicion '.			Transcript show: posicion.			Transcript show: ': '.			Transcript show: 'Se dio vuelta un casillero frio. La bomba mas cercana esta a una distancia de '.			Transcript show: distancia.			Transcript show: ' casillero(s).'.			Transcript cr.			^'CasilleroFrio'.		].		( ( casillero class ) = CasilleroCaliente ) ifTrue: [			distancia := (self calcularDistanciaA: CasilleroEstrella en:posicion)."			^ 'Se dio vuelta un casillero caliente. La estrella mas cercana esta a una distancia PROXIMAMENTE'."			Transcript show: 'Posicion '.			Transcript show: posicion.			Transcript show: ': '.			Transcript show: 'Se dio vuelta un casillero caliente. La estrella mas cercana esta a una distancia de '.			Transcript show: distancia.			Transcript show: ' casillero(s).'.			Transcript cr.			^'CasilleroCaliente'.		].		( ( casillero class ) = CasilleroBomba ) ifTrue: [			cantBombas := cantBombas + 1."			^ 'Se dio vuelta una bomba'."			Transcript show: 'Posicion '.			Transcript show: posicion.			Transcript show: ': '.			(cantBombas = 3)				ifTrue: [Transcript show: 'Se dio vuelta la 3º bomba. ¡Perdio!!';cr.]				ifFalse: [					Transcript show: 'Se dio vuelta la '.					Transcript show: cantBombas.					Transcript show: 'º bomba'.					Transcript cr.				].			^'CasilleroBomba'		].		( ( casillero class ) = CasilleroEstrella ) ifTrue: [			cantEstrellas := cantEstrellas + 1."			^ 'Se dio vuelta una estrella'."			Transcript show: 'Posicion '.			Transcript show: posicion.			Transcript show: ': '.			(cantEstrellas = 3)				ifTrue: [Transcript show: 'Se dio vuelta la 3º estrella: ¡Gano!!';cr.]				ifFalse: [					Transcript show: 'Se dio vuelta la '.					Transcript show: cantEstrellas.					Transcript show: 'º estrella'.					Transcript cr.				].			 ^'CasilleroEstrella'		].	].	].	^'finDelJuego'.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 00:25'!en:posicion	"Guarda el elemento en la posiciones"	( (posicion x > tamanio) | (posicion y > tamanio) ) ifTrue:	[ PosicionFueraDelTableroError new signal ].	^ tablero at:posicion.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 01:13'!hallarMaximo:posicion	"Halla el maximo para utilizarlo solamente como break del while de busqueda de bombas/estrellas"	| max1 max2 |	( ( ( posicion x ) - 1 ) < ( ( posicion y ) - 1) )		ifTrue: [max1 := ( ( posicion y) -1 ) ]		ifFalse: [max1 := ( ( posicion x ) -1 ) ].			( ( tamanio - ( posicion x ) ) < ( tamanio - ( posicion y ) ) )		ifTrue: [max2 := ( ( posicion y) -1 ) ]		ifFalse: [max2 := ( tamanio - ( posicion y ) ) ].	( max1 < max2 )		ifTrue: [ ^max2 ]		ifFalse: [ ^max1 ].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/28/2009 16:25'!inicializarEstadoDeLasCasillas	"Inicializa todas las casillas en LIBRE"	1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			estadoDeLasCasillas at:fila@columna put: 'LIBRE'.		].	].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 03:42'!initialize: size	"Constructor del tablero"	(size < 3) ifTrue: [ TamanioDemasiadoChicoError new signal ].	tamanio := size.	cantBombas := 0.	cantEstrellas := 0.	estadoDeLasCasillas := Dictionary new.	self inicializarEstadoDeLasCasillas.		tablero := Dictionary new.	self crearTablero.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 02:28'!poner: casillero en: posicion	"Guardo un casillero en una posicion del tablero"	( (posicion x > tamanio) | (posicion y > tamanio) ) ifTrue:		[ PosicionFueraDelTableroError new signal ].		tablero at: posicion put: casillero.! !Error subclass: #TamanioDemasiadoChicoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!TestCase subclass: #Tests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:28'!testAgregarTresBombas	"Comprueba que tras crear el tablero hay tres bombas"	| tablero cantBombas tamanio |	tamanio := 5.	cantBombas := 0.	tablero := Tablero new.	tablero initialize:tamanio.		1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			( ( ( tablero en:fila@columna ) class ) = CasilleroBomba ) ifTrue: [ cantBombas := cantBombas + 1.]		]	].	self assert: (cantBombas = 3).! !!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:29'!testAgregarTresEstrellas	"Comprueba que tras crear el tablero hay tres estrellas"	| tablero cantEstrellas tamanio |	tamanio := 5.	cantEstrellas := 0.	tablero := Tablero new.	tablero initialize:tamanio.		1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			( ( ( tablero en:fila@columna ) class ) = CasilleroEstrella ) ifTrue: [ cantEstrellas := cantEstrellas + 1.]		]	].	self assert: (cantEstrellas = 3).! !!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:04'!testCasilleroDescubiertoAlDarloVuelta	"Comprueba que un casillero cambia a estado 'descubierto' al darlo vuelta"	| casillero |		casillero := Casillero new.	self assert: ('oculto' = casillero getEstado).	casillero dateVuelta.	self assert: ('descubierto' = casillero getEstado)! !!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:01'!testCasilleroOcultoAlCrearlo	"Comprueba que un casillero es creado con el estado oculto"	| casillero |		casillero := Casillero new.	self assert: ('oculto' = casillero getEstado)! !!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:42'!testDarVueltaCasilleroFueraDeRango	"Intenta dar vuelta un casillero fuera del rango"	| tablero |		tablero := Tablero new.	tablero initialize:5.		self should: [tablero darVuelta:5@6.] raise: PosicionFueraDelTableroError.! !!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 03:59'!testDarVueltaCasilleroYaDadoVuelta	"Intenta dar vuelta un casillero ya dado vuelta"	| casillero |	casillero := Casillero new.	casillero dateVuelta.	self should: [casillero dateVuelta.] raise: CasilleroYaDescubiertoError.! !!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:38'!testDistanciaCasillerosCalientes	"Comprueba que los casilleros calientes toman bien las distancias hasta las estrellas"	| tablero tamanio casillero distancia |	tamanio := 5.	tablero := Tablero new.	tablero initialize:tamanio.	casillero := CasilleroFrio new.	1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			tablero poner: casillero en:fila@columna		]	].	casillero := CasilleroEstrella new.	tablero poner: casillero en: 1@1.		distancia := (tablero calcularDistanciaA:CasilleroEstrella en: 1@3).	self assert: (distancia = 2).	distancia := (tablero calcularDistanciaA:CasilleroEstrella en: 1@4).	self assert: (distancia = 3).	distancia := (tablero calcularDistanciaA:CasilleroEstrella en: 1@2).	self assert: (distancia = 1).	distancia := (tablero calcularDistanciaA:CasilleroEstrella en: 3@3).	self assert: (distancia = 2).	casillero := CasilleroEstrella new.	tablero poner: casillero en: 1@4.	distancia := (tablero calcularDistanciaA:CasilleroEstrella en: 1@3).	self assert: (distancia = 1).! !!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:38'!testDistanciaCasillerosFrios	"Comprueba que los casilleros frios toman bien las distancias hasta las bombas"	| tablero tamanio casillero distancia |	tamanio := 5.	tablero := Tablero new.	tablero initialize:tamanio.	casillero := CasilleroFrio new.	1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			tablero poner: casillero en:fila@columna		]	].	casillero := CasilleroBomba new.	tablero poner: casillero en: 1@1.		distancia := (tablero calcularDistanciaA:CasilleroBomba en: 1@3).	self assert: (distancia = 2).	distancia := (tablero calcularDistanciaA:CasilleroBomba en: 1@4).	self assert: (distancia = 3).	distancia := (tablero calcularDistanciaA:CasilleroBomba en: 1@2).	self assert: (distancia = 1).	distancia := (tablero calcularDistanciaA:CasilleroBomba en: 3@3).	self assert: (distancia = 2).	casillero := CasilleroBomba new.	tablero poner: casillero en: 1@4.	distancia := (tablero calcularDistanciaA:CasilleroBomba en: 1@3).	self assert: (distancia = 1).! !!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 03:56'!testIngresarFueraDeRango	"Intenta ingresar un elemento fuera del rango permitido"	| casillero tablero |		casillero := Casillero new.	casillero initialize.	tablero := Tablero new.	tablero initialize:5.		self should: [tablero poner: casillero en: 5@6.] raise: PosicionFueraDelTableroError.! !!Tests methodsFor: 'as yet unclassified' stamp: 'MR 10/29/2009 04:12'!testTamanioIncorrecto	"Comprueba que tratar de crear un tablero de tamanio menor a 3 devuelve una excepcion"	| tablero |	tablero := Tablero new.	self should: [ tablero initialize:-9. ] raise: TamanioDemasiadoChicoError.	self should: [ tablero initialize:0. ] raise: TamanioDemasiadoChicoError.	self should: [ tablero initialize:1. ] raise: TamanioDemasiadoChicoError.	self should: [ tablero initialize:2. ] raise: TamanioDemasiadoChicoError.! !
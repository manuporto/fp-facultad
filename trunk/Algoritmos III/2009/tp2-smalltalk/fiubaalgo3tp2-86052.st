Object subclass: #Casillero	instanceVariableNames: 'estado'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!Casillero methodsFor: 'initialize' stamp: 'MR 10/29/2009 04:02'!initialize	"Constructor del casillero"	estado := 'oculto'.! !!Casillero methodsFor: 'getters' stamp: 'MR 11/12/2009 14:58'!getEstado	"Devuelve el estado -descubierto u oculto-"	^estado.! !Casillero subclass: #CasilleroBomba	instanceVariableNames: ''	classVariableNames: 'Cantidad'	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroBomba methodsFor: 'initialize' stamp: 'MR 11/11/2009 14:36'!initialize	"Constructor de la clase CasilleroBomba"	super initialize.	Cantidad := 0.! !!CasilleroBomba methodsFor: 'functions' stamp: 'MR 11/12/2009 10:14'!darVuelta:tablero	"El casillero se descubre. Si ya estaba descubierto, tira una excepcion"	( estado = 'descubierto' ) ifTrue: [CasilleroYaDescubiertoError new signal ].	estado := 'descubierto'.		Cantidad := Cantidad + 1.		(Cantidad = 3)		ifTrue: [^-1]		ifFalse: [^0].! !Casillero subclass: #CasilleroCaliente	instanceVariableNames: 'distancia'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroCaliente methodsFor: 'initialize' stamp: 'MR 11/11/2009 12:48'!initialize: distance	"Constructor de la clase CasilleroCaliente"	super initialize.		distancia := distance.! !!CasilleroCaliente methodsFor: 'functions' stamp: 'MR 11/12/2009 11:47'!darVuelta:tablero	"El casillero se descubre. Si ya estaba descubierto, tira una excepcion"	( estado = 'descubierto' ) ifTrue: [CasilleroYaDescubiertoError new signal ].	estado := 'descubierto'.		^distancia.! !Casillero subclass: #CasilleroEstrella	instanceVariableNames: ''	classVariableNames: 'Cantidad'	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroEstrella methodsFor: 'functions' stamp: 'MR 11/12/2009 10:14'!darVuelta:tablero	"El casillero se descubre. Si ya estaba descubierto, tira una excepcion"	( estado = 'descubierto' ) ifTrue: [CasilleroYaDescubiertoError new signal ].	estado := 'descubierto'.		Cantidad := Cantidad+1.	(Cantidad = 3)		ifTrue: [^-2]		ifFalse: [^0].! !!CasilleroEstrella methodsFor: 'initialize' stamp: 'MR 11/11/2009 15:11'!initialize	"Constructor de la clase CasilleroEstrella"	super initialize.	Cantidad := 0.! !Casillero subclass: #CasilleroExpansible	instanceVariableNames: 'Posicion'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroExpansible methodsFor: 'initialize' stamp: 'MR 11/12/2009 10:12'!initialize:posicion	"Constructor de la clase CasilleroExpansible"	super initialize.	Posicion := posicion.! !!CasilleroExpansible methodsFor: 'functions' stamp: 'MR 11/12/2009 11:48'!darVuelta:tablero	"El casillero se descubre. Si ya estaba descubierto, tira una excepcion"	| xDesde xHasta yDesde yHasta casillero resultado |	( estado = 'descubierto' ) ifTrue: [CasilleroYaDescubiertoError new signal ].	estado := 'descubierto'.		xDesde := (Posicion x) - 1.	xHasta := (Posicion x) +1. 	yDesde := (Posicion y) -1.	yHasta := (Posicion y) +1.	xDesde to: xHasta do: [:indexX | 		yDesde to: yHasta do: [:indexY |			[				casillero := tablero en:indexX@indexY. 				resultado := casillero darVuelta:tablero.				( (resultado = -1) | (resultado = -2) ) ifTrue: [^resultado].			] on: Error do:[].		].	].	^0.! !Casillero subclass: #CasilleroFrio	instanceVariableNames: 'distancia'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!CasilleroFrio methodsFor: 'functions' stamp: 'MR 11/12/2009 10:15'!darVuelta:tablero	"El casillero se descubre. Si ya estaba descubierto, tira una excepcion"	( estado = 'descubierto' ) ifTrue: [CasilleroYaDescubiertoError new signal ].	estado := 'descubierto'.		^distancia.! !!CasilleroFrio methodsFor: 'initialize' stamp: 'MR 11/11/2009 12:48'!initialize:distance	"Constructor de la clase CasilleroCaliente"	super initialize.		distancia := distance.! !Error subclass: #CasilleroYaDescubiertoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!Object subclass: #GeneradorDeTablero	instanceVariableNames: 'tamanio estadoDeLasCasillas tablero'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!GeneradorDeTablero methodsFor: 'initialize' stamp: 'MR 11/11/2009 12:08'!inicializarEstadoDeLasCasillas	"Inicializa todas las casillas en LIBRE"	1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			estadoDeLasCasillas at:fila@columna put: 'LIBRE'.		].	].! !!GeneradorDeTablero methodsFor: 'initialize' stamp: 'MR 11/11/2009 12:54'!inicializarTablero	"Inicializa todas las casillas en LIBRE"	1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			tablero poner:'null' en:fila@columna.		].	].! !!GeneradorDeTablero methodsFor: 'initialize' stamp: 'MR 11/11/2009 15:41'!initialize:board de:size	tablero := board.	tamanio := size.	estadoDeLasCasillas := Dictionary new.	self inicializarTablero.	self inicializarEstadoDeLasCasillas.! !!GeneradorDeTablero methodsFor: 'calculos-adicionales' stamp: 'MR 11/11/2009 12:46'!calcularDistanciaA: tipo en:posicion	"Calcula la distancia desde la posicion actual hasta la primera bomba o estrella"	| iteracion xDesde xHasta yDesde yHasta maximo |	iteracion := 1.		maximo := self hallarMaximo:posicion.		[ iteracion <= tamanio "maximo" ] whileTrue: [				xDesde := (posicion x) - iteracion.		xHasta := (posicion x) + iteracion. 		yDesde := (posicion y) - iteracion.		yHasta := (posicion y) + iteracion.		( xDesde < 1 ) ifTrue: [ xDesde:= 1. ].		( xHasta > tamanio ) ifTrue: [ xHasta := tamanio. ].		( yDesde < 1 ) ifTrue: [ yDesde := 1. ].		( yHasta > tamanio ) ifTrue: [ yHasta := tamanio. ].		xDesde to: xHasta do: [:indexX | 			yDesde to: yHasta do: [:indexY |				( ( ( tablero en:indexX@indexY ) class ) = tipo )				ifTrue: [ 					^iteracion				].			].		].		iteracion := iteracion +1.	]! !!GeneradorDeTablero methodsFor: 'calculos-adicionales' stamp: 'MR 11/11/2009 12:45'!hallarMaximo:posicion	"Halla el maximo para utilizarlo solamente como break del while de busqueda de bombas/estrellas"	| max1 max2 |	( ( ( posicion x ) - 1 ) < ( ( posicion y ) - 1) )		ifTrue: [max1 := ( ( posicion y) -1 ) ]		ifFalse: [max1 := ( ( posicion x ) -1 ) ].			( ( tamanio - ( posicion x ) ) < ( tamanio - ( posicion y ) ) )		ifTrue: [max2 := ( ( posicion y) -1 ) ]		ifFalse: [max2 := ( tamanio - ( posicion y ) ) ].	( max1 < max2 )		ifTrue: [ ^max2 ]		ifFalse: [ ^max1 ].! !!GeneradorDeTablero methodsFor: 'carga' stamp: 'MR 11/11/2009 12:21'!agregarBombasEstrellas: max tipo: tipo	"Agrega las tres bombas o estrellas al tablero"	| cantidad posX posY casilla |		cantidad := 0.	[cantidad < max ] whileTrue: [		posX := (1 to: tamanio) atRandom.		posY := (1 to: tamanio) atRandom.		( ( estadoDeLasCasillas at:posX@posY ) = 'LIBRE' ) ifTrue: [						(tipo = 'bomba') ifTrue: [casilla := CasilleroBomba new.].			(tipo = 'estrella') ifTrue: [casilla := CasilleroEstrella new.].			casilla initialize.			tablero poner: casilla en: posX@posY.			cantidad := cantidad + 1.			estadoDeLasCasillas at:posX@posY put: 'OCUPADA'.		].	 ].! !!GeneradorDeTablero methodsFor: 'carga' stamp: 'MR 11/12/2009 11:20'!cargaManual	"Carga manual para las pruebas"	| casilla distancia |	casilla := CasilleroBomba new.	casilla initialize.	tablero poner:casilla en:1@5.	casilla := CasilleroBomba new.	casilla initialize.	tablero poner:casilla en:2@4.		casilla := CasilleroBomba new.	casilla initialize.	tablero poner:casilla en:5@1.		casilla := CasilleroEstrella new.	casilla initialize.	tablero poner:casilla en:3@4.		casilla := CasilleroEstrella new.	casilla initialize.	tablero poner:casilla en:4@1.		casilla := CasilleroEstrella new.	casilla initialize.	tablero poner:casilla en:5@5.	casilla := CasilleroExpansible new.	casilla initialize:1@1.	tablero poner:casilla en:1@1.		casilla := CasilleroFrio new.	distancia := self calcularDistanciaA: CasilleroBomba en:1@2.	casilla initialize:distancia.	tablero poner:casilla en:1@2.		casilla := CasilleroFrio new.	distancia := self calcularDistanciaA: CasilleroBomba en:1@3.	casilla initialize:distancia.	tablero poner:casilla en:1@3.		casilla := CasilleroCaliente new.	distancia := self calcularDistanciaA: CasilleroEstrella en:1@4.	casilla initialize:distancia.	tablero poner:casilla en:1@4.		casilla := CasilleroCaliente new.	distancia := self calcularDistanciaA: CasilleroEstrella en:2@1.	casilla initialize:distancia.	tablero poner:casilla en:2@1.		casilla := CasilleroCaliente new.	distancia := self calcularDistanciaA: CasilleroEstrella en:2@2.	casilla initialize:distancia.	tablero poner:casilla en:2@2.		casilla := CasilleroFrio new.	distancia := self calcularDistanciaA: CasilleroBomba en:2@3.	casilla initialize:distancia.	tablero poner:casilla en:2@3.		casilla := CasilleroCaliente new.	distancia := self calcularDistanciaA: CasilleroEstrella en:2@5.	casilla initialize:distancia.	tablero poner:casilla en:2@5.	casilla := CasilleroFrio new.	distancia := self calcularDistanciaA: CasilleroBomba en:3@1.	casilla initialize:distancia.	tablero poner:casilla en:3@1.		casilla := CasilleroFrio new.	distancia := self calcularDistanciaA: CasilleroBomba en:3@2.	casilla initialize:distancia.	tablero poner:casilla en:3@2.		casilla := CasilleroExpansible new.	casilla initialize:3@3.	tablero poner:casilla en:3@3.		casilla := CasilleroExpansible new.	casilla initialize:3@5.	tablero poner:casilla en:3@5.	casilla := CasilleroCaliente new.	distancia := self calcularDistanciaA: CasilleroEstrella en:4@2.	casilla initialize.	tablero poner:casilla en:4@2.		casilla := CasilleroExpansible new.	casilla initialize:4@3.	tablero poner:casilla en:4@3.		casilla := CasilleroCaliente new.	distancia := self calcularDistanciaA: CasilleroEstrella en:4@4.	casilla initialize:distancia.	tablero poner:casilla en:4@4.		casilla := CasilleroCaliente new.	distancia := self calcularDistanciaA: CasilleroEstrella en:4@5.	casilla initialize:distancia.	tablero poner:casilla en:4@5.	casilla := CasilleroCaliente new.	distancia := self calcularDistanciaA: CasilleroEstrella en:5@2.	casilla initialize:distancia.	tablero poner:casilla en:5@2.		casilla := CasilleroFrio new.	distancia := self calcularDistanciaA: CasilleroBomba en:5@3.	casilla initialize:distancia.	tablero poner:casilla en:5@3.		casilla := CasilleroCaliente new.	distancia := self calcularDistanciaA: CasilleroEstrella en:5@4.	casilla initialize:distancia.	tablero poner:casilla en:5@4.! !!GeneradorDeTablero methodsFor: 'carga' stamp: 'MR 11/12/2009 10:15'!completarTablero	"Una vez ingresadas las tres bombas y tres estrellas, completo el tablero"	| tipoCasillero casillero distancia |	1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			( ( estadoDeLasCasillas at:fila@columna ) = 'LIBRE' ) ifTrue: [				tipoCasillero := (1 to: 3) atRandom.				(tipoCasillero = 1) ifTrue: [					casillero := CasilleroFrio new.					distancia := self calcularDistanciaA: CasilleroBomba en:fila@columna.					casillero initialize:distancia.					].				(tipoCasillero = 2) ifTrue: [					casillero := CasilleroCaliente new.					distancia := self calcularDistanciaA: CasilleroEstrella en:fila@columna.					casillero initialize:distancia.					].				(tipoCasillero = 3) ifTrue: [					casillero := CasilleroExpansible new.					casillero initialize:fila@columna.					].				tablero poner: casillero en:fila@columna.				estadoDeLasCasillas at:fila@columna put: 'OCUPADA'.							].		].	].! !Object subclass: #Juego	instanceVariableNames: 'tablero victoria derrota'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!Juego methodsFor: 'functions' stamp: 'MR 11/12/2009 01:46'!jugar:posicion	"Envia al tablero la orden de mover la ficha"		| resultado |	( (victoria = false) & (derrota = false) ) ifTrue:	[			[ resultado := tablero darVuelta:posicion ]			on: PosicionFueraDelTableroError, CasilleroYaDescubiertoError		 		do: [:sig |"					(sig class = 'PosicionFueraDelTableroError') ifTrue: [Transcript show: 'La posicion esta fuera del tablero';cr.].					(sig class = CasilleroYaDescubiertoError) ifTrue: [Transcript show: 'El casillero ya habia sido dado vuelta';cr.]."				].		(resultado = -1) ifTrue: [ derrota := true. ].		(resultado = -2) ifTrue: [ victoria := true. ].		(victoria = true) ifTrue: [ Transcript show: 'Fin del juego. Victoria'.].		(derrota = true) ifTrue: [ Transcript show: 'Fin del juego. Derrota'.].	].! !!Juego methodsFor: 'initialize' stamp: 'MR 11/12/2009 01:36'!initialize:tamanio.	"Inicia el juego. Crea el tablero"		victoria := false.	derrota := false.	tablero := Tablero new.	[ tablero initialize: tamanio. ] on: TamanioDemasiadoChicoError	do: [ Transcript show: 'El tamaño debe ser superior a 3'. ].! !Error subclass: #PosicionFueraDelTableroError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!Object subclass: #Tablero	instanceVariableNames: 'tamanio tablero finJuego'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!Tablero methodsFor: 'initialize' stamp: 'MR 11/12/2009 11:33'!cargaManual	"Carga manual para las pruebas"	| generador |	tamanio := 5.	finJuego := false.		tablero := Dictionary new.	generador := GeneradorDeTablero new.	generador initialize:self de:tamanio.	generador agregarBombasEstrellas:3 tipo:'bomba'.	generador agregarBombasEstrellas:3 tipo:'estrella'.	generador completarTablero.	generador cargaManual.! !!Tablero methodsFor: 'initialize' stamp: 'MR 11/11/2009 12:43'!crearTablero	"Completa el tablero con distintos tipos de casillero"		| generador |	generador := GeneradorDeTablero new.	generador initialize:self de:tamanio.	generador agregarBombasEstrellas:3 tipo:'bomba'.	generador agregarBombasEstrellas:3 tipo:'estrella'.	generador completarTablero.! !!Tablero methodsFor: 'initialize' stamp: 'MR 11/12/2009 01:21'!initialize: size	"Constructor del tablero"	(size < 3) ifTrue: [ TamanioDemasiadoChicoError new signal ].	tamanio := size.	finJuego := false.		tablero := Dictionary new.	self crearTablero.! !!Tablero methodsFor: 'functions' stamp: 'MR 11/12/2009 10:16'!darVuelta:posicion	"Da vuelta el casillero en la posicion pedida"		| resultado |		( finJuego ) ifFalse: [			((posicion x > tamanio) | (posicion y > tamanio)) ifTrue: [ PosicionFueraDelTableroError new signal.].		resultado := (tablero at: posicion) darVuelta:self.				( (resultado = -1) | (resultado = -2) ) ifTrue: [finJuego := true. ].				^resultado.		]! !!Tablero methodsFor: 'access' stamp: 'MR 10/29/2009 00:25'!en:posicion	"Guarda el elemento en la posiciones"	( (posicion x > tamanio) | (posicion y > tamanio) ) ifTrue:	[ PosicionFueraDelTableroError new signal ].	^ tablero at:posicion.! !!Tablero methodsFor: 'access' stamp: 'MR 11/11/2009 12:20'!poner: casillero en: posicion	"Guardo un casillero en una posicion del tablero"	( (posicion x > tamanio) | (posicion y > tamanio) ) ifTrue:		[ PosicionFueraDelTableroError new signal ].		tablero at: posicion put: casillero.! !Error subclass: #TamanioDemasiadoChicoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!TestCase subclass: #Tests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2-86052'!!Tests methodsFor: 'tests' stamp: 'MR 10/29/2009 04:28'!testAgregarTresBombas	"Comprueba que tras crear el tablero hay tres bombas"	| tablero cantBombas tamanio |	tamanio := 5.	cantBombas := 0.	tablero := Tablero new.	tablero initialize:tamanio.		1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			( ( ( tablero en:fila@columna ) class ) = CasilleroBomba ) ifTrue: [ cantBombas := cantBombas + 1.]		]	].	self assert: (cantBombas = 3).! !!Tests methodsFor: 'tests' stamp: 'MR 10/29/2009 04:29'!testAgregarTresEstrellas	"Comprueba que tras crear el tablero hay tres estrellas"	| tablero cantEstrellas tamanio |	tamanio := 5.	cantEstrellas := 0.	tablero := Tablero new.	tablero initialize:tamanio.		1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			( ( ( tablero en:fila@columna ) class ) = CasilleroEstrella ) ifTrue: [ cantEstrellas := cantEstrellas + 1.]		]	].	self assert: (cantEstrellas = 3).! !!Tests methodsFor: 'tests' stamp: 'MR 11/12/2009 10:25'!testCasilleroDescubiertoAlDarloVuelta	"Comprueba que un casillero cambia a estado 'descubierto' al darlo vuelta"	| casillero tablero |		tablero := Tablero new.	tablero initialize:5.		casillero := CasilleroFrio new.	self assert: ('oculto' = casillero getEstado).	casillero darVuelta:tablero.	self assert: ('descubierto' = casillero getEstado)! !!Tests methodsFor: 'tests' stamp: 'MR 10/29/2009 04:01'!testCasilleroOcultoAlCrearlo	"Comprueba que un casillero es creado con el estado oculto"	| casillero |		casillero := Casillero new.	self assert: ('oculto' = casillero getEstado)! !!Tests methodsFor: 'tests' stamp: 'MR 10/29/2009 04:42'!testDarVueltaCasilleroFueraDeRango	"Intenta dar vuelta un casillero fuera del rango"	| tablero |		tablero := Tablero new.	tablero initialize:5.		self should: [tablero darVuelta:5@6.] raise: PosicionFueraDelTableroError.! !!Tests methodsFor: 'tests' stamp: 'MR 11/12/2009 10:50'!testDarVueltaCasilleroYaDadoVuelta	"Intenta dar vuelta un casillero ya dado vuelta"	| casillero tablero |	tablero:=Tablero new.	tablero initialize.	casillero := CasilleroBomba new.	casillero initialize.	casillero darVuelta:tablero.	self should: [casillero darVuelta:tablero] raise: CasilleroYaDescubiertoError.! !!Tests methodsFor: 'tests' stamp: 'MR 11/12/2009 02:26'!testDistanciaCasillerosCalientes	"Comprueba que los casilleros calientes toman bien las distancias hasta las estrellas"	| tablero tamanio casillero distancia generador |	tamanio := 5.	tablero := Tablero new.	tablero initialize:tamanio.	generador := GeneradorDeTablero new.	generador initialize:tablero de:tamanio.	casillero := CasilleroFrio new.	1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			tablero poner: casillero en:fila@columna		]	].	casillero := CasilleroEstrella new.	tablero poner: casillero en: 1@1.		distancia := (generador calcularDistanciaA:CasilleroEstrella en: 1@3).	self assert: (distancia = 2).	distancia := (generador calcularDistanciaA:CasilleroEstrella en: 1@4).	self assert: (distancia = 3).	distancia := (generador calcularDistanciaA:CasilleroEstrella en: 1@2).	self assert: (distancia = 1).	distancia := (generador calcularDistanciaA:CasilleroEstrella en: 3@3).	self assert: (distancia = 2).	casillero := CasilleroEstrella new.	tablero poner: casillero en: 1@4.	distancia := (generador calcularDistanciaA:CasilleroEstrella en: 1@3).	self assert: (distancia = 1).! !!Tests methodsFor: 'tests' stamp: 'MR 11/12/2009 02:28'!testDistanciaCasillerosFrios	"Comprueba que los casilleros frios toman bien las distancias hasta las bombas"	| tablero tamanio casillero distancia generador |	tamanio := 5.	tablero := Tablero new.	tablero initialize:tamanio.	generador := GeneradorDeTablero new.	generador initialize:tablero de:tamanio.	casillero := CasilleroCaliente new.	1 to: tamanio do: [:fila | 		1 to: tamanio do: [:columna | 			tablero poner: casillero en:fila@columna		]	].	casillero := CasilleroBomba new.	tablero poner: casillero en: 1@1.		distancia := (generador calcularDistanciaA:CasilleroBomba en: 1@3).	self assert: (distancia = 2).	distancia := (generador calcularDistanciaA:CasilleroBomba en: 1@4).	self assert: (distancia = 3).	distancia := (generador calcularDistanciaA:CasilleroBomba en: 1@2).	self assert: (distancia = 1).	distancia := (generador calcularDistanciaA:CasilleroBomba en: 3@3).	self assert: (distancia = 2).	casillero := CasilleroBomba new.	tablero poner: casillero en: 1@4.	distancia := (generador calcularDistanciaA:CasilleroBomba en: 1@3).	self assert: (distancia = 1).! !!Tests methodsFor: 'tests' stamp: 'MR 11/12/2009 11:51'!testExpansivaCompleta	"Prueba si una casilla expansiva que tiene 8 casilleros libres a su alrededor, los da vuelta a todos."	| tablero |	tablero := Tablero new.	tablero cargaManual.		self assert: (( (tablero en:2@2) getEstado ) = 'oculto' ).	self assert: (( (tablero en:2@3) getEstado ) = 'oculto' ).	self assert: (( (tablero en:2@4) getEstado ) = 'oculto' ).	self assert: (( (tablero en:3@2) getEstado ) = 'oculto' ).	self assert: (( (tablero en:3@4) getEstado ) = 'oculto' ).	self assert: (( (tablero en:4@2) getEstado ) = 'oculto' ).	self assert: (( (tablero en:4@3) getEstado ) = 'oculto' ).	self assert: (( (tablero en:4@4) getEstado ) = 'oculto' ).	(tablero en:3@3) darVuelta:tablero.		self assert: (( (tablero en:3@3) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:2@2) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:2@3) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:2@4) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:3@2) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:3@4) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:4@2) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:4@3) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:4@4) getEstado ) = 'descubierto' ).! !!Tests methodsFor: 'tests' stamp: 'MR 11/12/2009 11:50'!testExpansivaEnEsquina	"Prueba si una casilla expansiva situada en una esquina, da vuelta las casillas correspondientes."	| tablero |	tablero := Tablero new.	tablero cargaManual.		self assert: (( (tablero en:1@2) getEstado ) = 'oculto' ).	self assert: (( (tablero en:2@2) getEstado ) = 'oculto' ).	self assert: (( (tablero en:2@1) getEstado ) = 'oculto' ).	(tablero en:1@1) darVuelta:tablero.	self assert: (( (tablero en:1@2) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:2@2) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:2@1) getEstado ) = 'descubierto' ).! !!Tests methodsFor: 'tests' stamp: 'MR 11/12/2009 12:22'!testExpansivaRecursiva	"Prueba si una casilla expansiva que debe dar vuelta otra casilla expansiva, lo hace bien."	| tablero |	tablero := Tablero new.	tablero cargaManual.		self assert: (( (tablero en:2@2) getEstado ) = 'oculto' ).	self assert: (( (tablero en:2@3) getEstado ) = 'oculto' ).	self assert: (( (tablero en:2@4) getEstado ) = 'oculto' ).	self assert: (( (tablero en:3@2) getEstado ) = 'oculto' ).	self assert: (( (tablero en:3@4) getEstado ) = 'oculto' ).	self assert: (( (tablero en:4@2) getEstado ) = 'oculto' ).	self assert: (( (tablero en:4@3) getEstado ) = 'oculto' ).	self assert: (( (tablero en:4@4) getEstado ) = 'oculto' ).	self assert: (( (tablero en:5@2) getEstado ) = 'oculto' ).	self assert: (( (tablero en:5@3) getEstado ) = 'oculto' ).	self assert: (( (tablero en:5@4) getEstado ) = 'oculto' ).	(tablero en:3@3) darVuelta:tablero.		self assert: (( (tablero en:3@3) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:2@2) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:2@3) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:2@4) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:3@2) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:3@4) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:4@2) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:4@3) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:4@4) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:5@2) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:5@3) getEstado ) = 'descubierto' ).	self assert: (( (tablero en:5@4) getEstado ) = 'descubierto' ).! !!Tests methodsFor: 'tests' stamp: 'MR 11/12/2009 12:16'!testFinDelJuegoDerrota	"Comprueba que tras descubrir tres bombas el juego devuelve el valor -1 indicando que se perdio"	| tablero |	tablero := Tablero new.	tablero cargaManual.	self assert: ( (tablero darVuelta:1@5) ~= -1).	self assert: ( (tablero darVuelta:2@4) ~= -1).	self assert: ( (tablero darVuelta:5@1) = -1).! !!Tests methodsFor: 'tests' stamp: 'MR 11/12/2009 12:16'!testFinDelJuegoVictoria	"Comprueba que tras descubrir tres estrellas el juego devuelve el valor -2 indicando que se gano"	| tablero |	tablero := Tablero new.	tablero cargaManual.	self assert: ( (tablero darVuelta:3@4) ~= -2).	self assert: ( (tablero darVuelta:4@1) ~= -2).	self assert: ( (tablero darVuelta:5@5) = -2).! !!Tests methodsFor: 'tests' stamp: 'MR 10/29/2009 03:56'!testIngresarFueraDeRango	"Intenta ingresar un elemento fuera del rango permitido"	| casillero tablero |		casillero := Casillero new.	casillero initialize.	tablero := Tablero new.	tablero initialize:5.		self should: [tablero poner: casillero en: 5@6.] raise: PosicionFueraDelTableroError.! !!Tests methodsFor: 'tests' stamp: 'MR 10/29/2009 04:12'!testTamanioIncorrecto	"Comprueba que tratar de crear un tablero de tamanio menor a 3 devuelve una excepcion"	| tablero |	tablero := Tablero new.	self should: [ tablero initialize:-9. ] raise: TamanioDemasiadoChicoError.	self should: [ tablero initialize:0. ] raise: TamanioDemasiadoChicoError.	self should: [ tablero initialize:1. ] raise: TamanioDemasiadoChicoError.	self should: [ tablero initialize:2. ] raise: TamanioDemasiadoChicoError.! !